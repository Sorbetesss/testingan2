/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_LuaWrap_WRAP_H_
#define SWIG_LuaWrap_WRAP_H_

class SwigDirector_LuaCallback : public Lua511::LuaCallback, public Swig::Director {

public:
    SwigDirector_LuaCallback();
    virtual ~SwigDirector_LuaCallback();
    virtual int runCallback(lua_State *l);

    typedef int (SWIGSTDCALL* SWIG_Callback0_t)(void*);
    void swig_connect_director(SWIG_Callback0_t callbackrunCallback);

private:
    SWIG_Callback0_t swig_callbackrunCallback;
    void swig_init_callbacks();
};

class SwigDirector_LuaHook : public Lua511::LuaHook, public Swig::Director {

public:
    SwigDirector_LuaHook();
    virtual ~SwigDirector_LuaHook();
    virtual int runHook(lua_State *l, lua_State *debug);

    typedef int (SWIGSTDCALL* SWIG_Callback0_t)(void*, void*);
    void swig_connect_director(SWIG_Callback0_t callbackrunHook);

private:
    SWIG_Callback0_t swig_callbackrunHook;
    void swig_init_callbacks();
};


#endif
