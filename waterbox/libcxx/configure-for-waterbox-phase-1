#!/bin/sh
set -e
if [ -z "$SYSROOT" ]; then export SYSROOT="$(realpath "$(dirname "$0")/../sysroot")"; fi
if [ -z "$LLVMDIR" ]; then export LLVMDIR="$(realpath "$(dirname "$0")/../llvm-project")"; fi

# libcxx needs futex.h in atomic.cpp for FUTEX_WAIT_PRIVATE and FUTEX_WAKE_PRIVATE
# the host linux header pulls in a ton of other headers, so let's just make one ourselves
mkdir -p "$SYSROOT/include/linux"
rm -f "$SYSROOT/include/linux/futex.h"
echo "#define FUTEX_WAIT_PRIVATE 128\n#define FUTEX_WAKE_PRIVATE 129" > "$SYSROOT/include/linux/futex.h"

rm -rf build1
mkdir build1
cd build1
export CFLAGS="-mcmodel=large -mstack-protector-guard=global -fno-use-cxa-atexit -fno-pic -fno-pie"
export CXXFLAGS="-mcmodel=large -mstack-protector-guard=global -fno-use-cxa-atexit -fno-pic -fno-pie"
export LDFLAGS="-Wl,-no-pie"
cmake \
	-DCMAKE_C_COMPILER="$SYSROOT/bin/musl-clang" \
	-DCMAKE_CXX_COMPILER="$SYSROOT/bin/musl-clang" \
	-DLIBCXX_ENABLE_SHARED=OFF \
	-DLIBCXX_CXX_ABI="system-libcxxabi" \
	-DLIBCXX_CXX_ABI_INCLUDE_PATHS="$LLVMDIR/libcxxabi/include" \
	-DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
	-DLIBCXX_ENABLE_RANDOM_DEVICE=OFF \
	-DLIBCXX_HAS_MUSL_LIBC=ON \
	-DLIBCXX_USE_COMPILER_RT=ON \
	-DLIBCXX_INCLUDE_TESTS=OFF \
	-DLIBCXX_INCLUDE_BENCHMARKS=OFF \
	-DLIBCXX_INCLUDE_DOCS=OFF \
	-DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=OFF \
	-DCMAKE_INSTALL_PREFIX="$SYSROOT" \
	-DCMAKE_AR="$(which llvm-ar)" \
	-DCMAKE_RANLIB="$(which llvm-ranlib)" \
	-DPython3_EXECUTABLE="$(which python3)" \
	$LLVMDIR/libcxx
